<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015 Red Hat, Inc. and/or its affiliates
    and other contributors as indicated by the @author tags.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.hawkular</groupId>
    <artifactId>hawkular</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>hawkular-kettle</artifactId>
  <packaging>pom</packaging>
  <name>Hawkular Kettle</name>
  <description>Hawkular distribution that integrates all components into a single server.</description>

  <properties>
    <kettle.build.type>production</kettle.build.type>
    <nest.dist.zip.root.dir>wildfly-${version.org.wildfly}</nest.dist.zip.root.dir>
    <hawkular.realm.template>hawkular-realm.json</hawkular.realm.template>

    <checkstyle.suppressions.file>${basedir}/src/main/scripts/checkstyle-suppressions.xml</checkstyle.suppressions.file>

    <!-- The versions of the components that go into our integration distribution -->
    <version.org.hawkular.agent>0.0.1-SNAPSHOT</version.org.hawkular.agent>
    <version.org.hawkular.nest>0.0.1-SNAPSHOT</version.org.hawkular.nest>
    <version.org.hawkular.inventory>0.0.1-SNAPSHOT</version.org.hawkular.inventory>
    <version.org.hawkular.alerts>1.0.0-SNAPSHOT</version.org.hawkular.alerts>
    <version.org.hawkular.metrics>0.3.2-SNAPSHOT</version.org.hawkular.metrics>
    <version.org.hawkular.console>1.0.0-SNAPSHOT</version.org.hawkular.console>
    <version.org.hawkular.accounts>1.0.0-SNAPSHOT</version.org.hawkular.accounts>
    <version.org.hawkular.pinger>1.0.0-SNAPSHOT</version.org.hawkular.pinger>
    <version.org.hawkular.availCreator>1.0.0-SNAPSHOT</version.org.hawkular.availCreator>
    <version.org.keycloak>1.1.0.Final</version.org.keycloak>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.hawkular.agent</groupId>
      <artifactId>hawkular-monitor</artifactId>
      <version>${version.org.hawkular.agent}</version>
      <classifier>module</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular.nest</groupId>
      <artifactId>hawkular-nest-distro</artifactId>
      <version>${version.org.hawkular.nest}</version>
      <classifier>distribution</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular.inventory</groupId>
      <artifactId>inventory-rest-api</artifactId>
      <version>${version.org.hawkular.inventory}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular</groupId>
      <artifactId>hawkular-pinger</artifactId>
      <version>${version.org.hawkular.pinger}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular</groupId>
      <artifactId>hawkular-avail-creator</artifactId>
      <version>${version.org.hawkular.availCreator}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular.alerts</groupId>
      <artifactId>hawkular-alerts-ear</artifactId>
      <version>${version.org.hawkular.alerts}</version>
      <type>ear</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular.alerts</groupId>
      <artifactId>example-alerts-ui</artifactId>
      <version>${version.org.hawkular.alerts}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular.alerts</groupId>
      <artifactId>hawkular-actions-email</artifactId>
      <version>${version.org.hawkular.alerts}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular.metrics</groupId>
      <artifactId>hawkular-metrics-api-jaxrs</artifactId>
      <version>${version.org.hawkular.metrics}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular.metrics</groupId>
      <artifactId>hawkular-metrics-embedded-cassandra-ear</artifactId>
      <version>${version.org.hawkular.metrics}</version>
      <type>ear</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular</groupId>
      <artifactId>hawkular-console</artifactId>
      <version>${version.org.hawkular.console}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.hawkular.accounts</groupId>
      <artifactId>hawkular-accounts</artifactId>
      <version>${version.org.hawkular.accounts}</version>
      <type>war</type>
    </dependency>

    <!-- Keycloak-related dependencies -->
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-wildfly-adapter-dist</artifactId>
      <version>${version.org.keycloak}</version>
      <type>zip</type>
    </dependency>

  </dependencies>

  <build>

    <plugins>
      <!-- unpack the nest distribution to get its configuration that we need to customize -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-nest-configuration</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/nest</outputDirectory>
              <includeArtifactIds>hawkular-nest-distro</includeArtifactIds>
              <!-- just unpack the config file - its all we need -->
              <includes>*/standalone/configuration/standalone.xml</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- if we have any files that we need in the distro, copy them now -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-distro-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/distro-resources</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/distro-resources</directory>
                  <filtering>false</filtering> <!-- let the assembly filter if it wants -->
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- further customize standalone.xml -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>1.0</version> <!-- TODO remove after moving to parent pom 8 -->
        <executions>
          <execution>
            <id>transform-standalone-xml</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>transform</goal>
            </goals>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <dir>${basedir}/target/nest/${nest.dist.zip.root.dir}/standalone/configuration</dir>
                  <stylesheet>src/main/scripts/standalone.xsl</stylesheet>
                  <includes>
                    <include>standalone.xml</include>
                  </includes>
                  <outputDir>${basedir}/target/distro-resources/standalone/configuration</outputDir>
                  <parameters>
                    <parameter>
                      <name>kettle.build.type</name>
                      <value>${kettle.build.type}</value>
                    </parameter>
                    <parameter>
                      <name>uuid.hawkular.accounts.backend</name>
                      <value>${uuid.hawkular.accounts.backend}</value>
                    </parameter>
                  </parameters>
                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/scripts/distro-assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>distro-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.1.2</version>
        <configuration>
          <imageName>hawkular:snapshot</imageName>
          <dockerDirectory>docker</dockerDirectory>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}-distribution.zip</include>
            </resource>
          </resources>
        </configuration>
      </plugin>

      <!-- Generate some keys for Keycloak integration, so that we don't ship with default credentials -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.3</version>
        <executions>
          <execution>
            <id>set-custom-property</id>
            <phase>initialize</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                import java.util.UUID
                def uuidBackend = UUID.randomUUID().toString()
                def uuidUi = UUID.randomUUID().toString()
                project.properties.setProperty('uuid.hawkular.accounts.backend', uuidBackend.toString())
                project.properties.setProperty('uuid.hawkular.ui', uuidUi.toString())
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <!-- unzips the assembly so devs can run it right out of target/ -->
    <profile>
      <id>dev</id>
      <properties>
        <kettle.build.type>dev</kettle.build.type>
        <!-- This special realm for dev purposes has a default user 'jdoe' with password 'password' -->
        <hawkular.realm.template>hawkular-realm-for-dev.json</hawkular.realm.template>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>unzip-distro</id>
                <phase>install</phase>
                <configuration>
                  <target>
                    <unzip src="${project.build.directory}/${project.build.finalName}-distribution.zip" dest="${project.build.directory}" />
                    <chmod dir="${project.build.directory}/${nest.dist.zip.root.dir}/bin" includes="*.sh"
                      perm="u+x" type="file" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
